@keyframes fadeInScrambleText {
  from {
    color: rgba(0, 0, 0, 0);
    transform: scale(1.6);
  }

  to {
    color: rgba($color-heading, 1);
    transform: scale(1);
  }
}

@keyframes fadeInHeroText {
  from {
    opacity: 0;
    transform: translateY(calc(#{$spacing * 2} + 50%));
  }

  to {
    opacity: 1;
    transform: translateY($spacing);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.HeroSection {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: calc(100vh - #{$spacing * 4});
  width: 100%;

  @include medium {
    height: calc(100vh - #{$spacing * 2});
  }
}

.Hypnotize {
  text-align: center;
  padding-left: $spacing;
  padding-right: $spacing;
  max-width: calc(100vw - #{$spacing * 2});
  transform: translateY(calc(#{$spacing} + 15%));

  h1 {
    font-size: 1.3rem;
    font-family: 'Muli';
    letter-spacing: 5px;
    font-weight: 600;
    color: transparent;
    background-repeat: repeat;
    background-size: $font-size;
    background-clip: text;
    background-image: url('../../images/hypnotize-background.png');
    margin-top: 0;
    margin-bottom: $spacing / 2;
    opacity: 1;
    z-index: 2;
    word-wrap: break-word;
    word-break: break-all;
    color: rgba($color-text, 0);
    transform: scale(1.6);
    animation: fadeInScrambleText $animation-duration-long 1.5s ease-in-out
      forwards;
  }
}

.Tagline {
  p {
    opacity: 0;
    animation: fadeInHeroText $animation-duration-long ease-in-out forwards;
    animation-delay: 1.5s;
    color: $color-heading;
    font-size: 2.6rem;

    @include small {
      font-size: $font-size-h1;
    }

    @include medium {
      font-size: $font-size-h1 * 1.2;
    }
  }
}

@mixin HomeSectionHeading {
  text-transform: uppercase;
  font-family: 'Muli';
  font-weight: 700;
  font-size: 2.5rem;
  letter-spacing: 6px;
  color: $color-heading;
  position: absolute;
  top: 0;
  margin: 0;
  transform: translate(0, -60%);
  padding-left: $spacing;
  padding-right: $spacing;

  @include small {
    font-size: $font-size-h1 * 1.2;
  }

  @include medium {
    font-size: $font-size-h1 * 1.4;
  }

  @include large {
    font-size: 5rem;
    padding-left: $spacing * 2;
    padding-right: $spacing * 2;
  }
}

.Heading {
  position: relative;
  z-index: 10;
}

.AboutSection {
  opacity: 0;
  animation: fadeIn $animation-duration-long 2s ease-in-out forwards;

  .Heading h1 {
    @include HomeSectionHeading;
    left: 0;
  }

  .Content {
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    padding: $spacing $spacing;
    padding-top: $spacing * 1.5;
    min-height: 400px;
    height: 100%;
    background-color: $color-primary;

    @include large {
      flex-direction: row;
      padding: $spacing * 2 $spacing * 2;
    }

    .Text {
      flex-basis: calc(50% - #{$spacing});
      display: flex;
      align-items: center;
    }

    .Image {
      margin-bottom: $spacing;
      flex-basis: calc(50% - #{$spacing});

      @include large {
        margin-bottom: 0;
      }

      img {
        max-height: 360px;
        object-fit: cover;

        @include large {
          max-height: 100%;
        }
      }
    }
  }
}

.AboutText {
  padding-top: $spacing;
  padding-bottom: $spacing;
}

.WorkSection {
  // background-color: $color-secondary;

  .Heading h1 {
    @include HomeSectionHeading();
    right: 0;
  }

  .WorkGrid {
    display: grid;
    grid-gap: $spacing-tight;
    grid-template-columns: 1fr;
    grid-template-areas: 'a' 'b' 'c' 'd' 'e';

    @include medium {
      grid-template-areas:
        'b c a a'
        'd e a a';
      grid-template-columns: repeat(4, 1fr);

      $extra-screen-width: calc(calc(100vw - #{$max-content-width}) / 2);
      $max-grid-width: calc(
        (#{$max-content-width - $spacing-tight * 3} + #{$extra-screen-width}) /
          4
      );
      grid-template-rows: repeat(2, $max-grid-width);
    }

    @include large {
      $width-without-grid-gap: $max-screen-width - $spacing-tight * 3;
      grid-template-rows: repeat(2, #{($width-without-grid-gap / 4)});
    }

    @include xlarge {
      $content-grid-gutter: ($max-screen-width - $max-content-width) / 2;
      $minimum-width: 740px;
      $minimum-grid-width: ($minimum-width / 4) - ($spacing-tight * 3 / 4);

      $extra-width-spacing: $content-grid-gutter * 2;
      $grid-gap-spacing: $spacing-tight * 3;
      $xlarge-screen-content-width: 50vw;
      $maximum-grid-width: calc(
        (
            #{$extra-width-spacing} + #{$xlarge-screen-content-width} - #{$grid-gap-spacing}
          ) / 4
      );

      grid-template-rows: repeat(
        2,
        minmax($minimum-grid-width, $maximum-grid-width)
      );
    }

    & > div {
      cursor: pointer;
      width: 100%;
      height: 100%;
    }

    img {
      object-fit: cover;
      transition: filter $animation-duration-long ease-in-out;

      &:hover {
        filter: grayscale(0);
      }
    }

    .Big {
      grid-area: a;
      background-color: rgb(250, 184, 184);
      background-image: url('../../images/placeholder_1.jpg');
      background-size: cover;
      background-position: center;
    }

    .B {
      grid-area: b;
      background-color: rgb(196, 236, 173);
    }

    .C {
      grid-area: c;
      background-color: rgb(250, 250, 160);
    }

    .D {
      grid-area: d;
      background-color: rgb(247, 209, 140);
    }

    .E {
      grid-area: e;
      background-color: rgb(167, 231, 228);
    }
  }
}

.ServicesSection {
  .Heading h1 {
    @include HomeSectionHeading();
    left: 0;
  }
}

.BlogSection {
  text-align: center;
  .Heading h1 {
    @include HomeSectionHeading();
    right: 0;
  }
}

.BlogGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: $spacing-tight;
  grid-template-areas: 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h';

  @include small {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-template-areas: 'a b' 'c d' 'e f' 'g h';
  }

  @include medium {
    height: 820px;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(10, 1fr);
    grid-template-areas:
      'a a a a a b b c c c'
      'a a a a a b b c c c'
      'a a a a a b b c c c'
      'a a a a a b b d d d'
      'a a a a a b b d d d'
      'e e e e e e e d d d'
      'e e e e e e e d d d'
      'f f f g g g g h h h'
      'f f f g g g g h h h'
      'f f f g g g g h h h';
  }

  & > div {
    width: 100%;
    height: 100%;
    background: black;

    img {
      object-fit: cover;
    }
  }

  .A {
    grid-area: a;
  }

  .B {
    grid-area: b;
  }

  .C {
    grid-area: c;
  }

  .D {
    grid-area: d;
  }

  .E {
    grid-area: e;
  }

  .F {
    grid-area: f;
  }

  .G {
    grid-area: g;
  }

  .H {
    grid-area: h;
  }
}
