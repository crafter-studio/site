.SvgWrapper {
  --button-width: 120px;
  --button-height: 40px;
  $button-width: var(--button-width);
  $button-height: var(--button-height);
  $button-circumference: calc((var(--button-width) + var(--button-height)) * 2);

  @keyframes drawSquare {
    0% {
      stroke-dasharray: $button-height $button-circumference;
      stroke-dashoffset: neg($button-width + $button-height/2);
      stroke-width: 0px;
    }

    100% {
      stroke-dasharray: $button-circumference;
      stroke-dashoffset: 0;
      stroke-width: 2px;
    }
  }

  @keyframes fadeIn {
    0% {
      transform: translateY(15px);
      opacity: 0;
    }

    100% {
      transform: translateY(0px);
      opacity: 1;
    }
  }
  width: var(--button-width);
  display: inline-block;
  text-align: center;
  position: relative;
  cursor: pointer;
  animation: fadeIn $animation-duration-long ease-in-out forwards;
  animation-delay: 4.5s;
  opacity: 0;

  &:not(:first-child) {
    margin-left: $spacing;
  }

  .LinkPlaceholder {
    visibility: hidden;
    display: inline-block;
    font-size: 1.1rem;
    text-transform: uppercase;
    letter-spacing: $letter-spacing;
    line-height: $button-height;
  }

  .Link {
    display: block;
    text-align: center;
    color: $color-text-neg;
    font-size: 1.1rem;
    text-transform: uppercase;
    letter-spacing: $letter-spacing;
    transition: color $animation-duration-long ease-in-out;
    line-height: $button-height;
  }

  &:hover .Link {
    color: $color-primary;
  }

  > svg {
    height: $button-height;
    position: absolute;
    top: 0;
    left: 0;
  }

  &:hover .Rect {
    stroke-dasharray: $button-circumference;
    stroke-dashoffset: 0;
    stroke-width: 3px;
    stroke: $color-primary;
  }

  .Rect {
    fill: transparent;
    stroke-dasharray: $button-height $button-circumference;
    stroke-dashoffset: calc(0 - (#{$button-width} + #{$button-height} / 2));
    stroke-width: 4px;
    stroke: $color-text-neg;
    transition: $animation-duration stroke-dasharray ease-in-out,
      $animation-duration stroke-dashoffset ease-in-out,
      $animation-duration stroke-width ease-in-out,
      $animation-duration-long fill ease-in-out,
      stroke $animation-duration-long ease-in-out;

    // animation: drawSquare 3.5s ease-in-out forwards;
  }
}
